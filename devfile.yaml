schemaVersion: 2.1.0
metadata:
  name: nodejs-web-app
components:
  - name: tools
    container:
      image: quay.io/rnikitenko/custom-udi:latest
      endpoints:
        - exposure: public
          name: nodejs
          protocol: http
          targetPort: 3000
      memoryLimit: 1G
      mountSources: true
    attributes:
      controller.devfile.io/merge-contribution: true
  - name: ubi-minimal
    container:
      image: registry.access.redhat.com/ubi8/ubi-minimal
      command: ['tail']
      args: ['-f', '/dev/null']
      memoryLimit: 64M
      mountSources: true 

commands:
  - id: command-using-env
    exec:
      component: tooling-container
      commandLine: echo "Hello $USER"
      env:
        - name: USER
          value: janedoe
          
  - id: test-env
    exec:
      label: "Test ENV in commands"
      component: tools
      workingDir: ${PROJECT_SOURCE}/app
      commandLine: "echo ${KUBERNETES_SERVICE_HOST}"
      group:
        kind: run

  - id: install-dependencies
    exec:
      label: "Install dependencies"
      component: tools
      workingDir: ${PROJECT_SOURCE}/app
      commandLine: "npm install"
      group:
        kind: build
        isDefault: true

  - id: run-application
    exec:
      label: "Run web application"
      component: tools
      workingDir: ${PROJECT_SOURCE}/app
      commandLine: "nodemon app.js"
      group:
        kind: run

  - id: debug
    exec:
      label: "Run web application (debugging enabled)"
      component: tools
      workingDir: ${PROJECT_SOURCE}/app
      commandLine: "nodemon --inspect app.js"
      group:
        kind: debug
        isDefault: true

  - id: stop-application
    exec:
      label: "Stop web application"
      component: tools
      commandLine: >-
          node_server_pids=$(pgrep -fx '.*nodemon (--inspect )?app.js' | tr "\\n" " ") &&
          echo "Stopping node server with PIDs: ${node_server_pids}" && 
          kill -15 ${node_server_pids} &>/dev/null && echo 'Done.'
      group:
        kind: run
